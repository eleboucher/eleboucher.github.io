{"version":3,"sources":["webpack:///./src/components/item.tsx","webpack:///./src/components/divider.tsx","webpack:///./src/components/section.tsx","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./src/pages/projects.tsx"],"names":["Wrapper","styled","div","Title","p","Description","Item","title","description","children","React","memo","Divider","SectionWrapper","span","Section","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","Link","a","ProjectsItem","project","formattedLanguages","languages","edges","map","index","language","node","name","href","url","stargazers","totalCount","forks","githubQuery","ProjectsPage","query","useStaticQuery","repos","github","user","pinnedItems","ProjectsItems","rel","aria-label","style","marginTop","fontWeight"],"mappings":"2FAAA,qCAIMA,EAAUC,IAAOC,IAAV,gEAAGD,CAAH,oBAGPE,EAAQF,IAAOG,EAAV,8DAAGH,CAAH,sCAKLI,EAAcJ,IAAOG,EAAV,oEAAGH,CAAH,4DAMXK,EAAO,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,SAAvB,OACX,kBAACT,EAAD,KACE,kBAACG,EAAD,KAAQI,GACR,kBAACF,EAAD,KAAcG,GACbC,IAUUC,QAAMC,KAAKL,I,uECbXM,EAhBCX,IAAOC,IAAV,uEAAGD,CAAH,wLCGPY,EAAiBZ,IAAOC,IAAV,4EAAGD,CAAH,kIAiBdE,EAAQF,IAAOa,KAAV,mEAAGb,CAAH,+FAOLc,EAAU,SAAC,GAAD,IAAGN,EAAH,EAAGA,SAAUF,EAAb,EAAaA,MAAUS,EC9BxB,SAAuCC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIE,EAAKC,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKP,GAG7B,IAAKG,EAAI,EAAGA,EAAIE,EAAWG,OAAQL,IACjCD,EAAMG,EAAWF,GACbF,EAASQ,QAAQP,IAAQ,IAC7BE,EAAOF,GAAOF,EAAOE,IAGvB,OAAOE,EDkBO,gCACd,kBAACR,EAAmBG,EAClB,kBAAC,EAAD,MACA,kBAACb,EAAD,KAAQI,GACPE,IASUC,QAAMC,KAAKI,I,kCE3C1B,4FASMY,EAAO1B,IAAO2B,EAAV,iEAAG3B,CAAH,oBAIJ4B,EAAe,SAAC,GAAgB,QAAdC,EAAc,EAAdA,QAChBC,EAAkB,UAAGD,EAAQE,iBAAX,iBAAG,EAAmBC,aAAtB,aAAG,EAA0BC,KAAI,SAACD,EAAOE,GAAU,QACnEC,EAAWH,aAAH,EAAGA,EAAOI,KAAKC,KAC7B,GAAwC,KAApC,UAAAR,EAAQE,iBAAR,eAAmBC,MAAMR,QAAc,MAAO,IAAIW,EAAX,IAC3C,OAAQD,GACN,KAAK,EACH,UAAWC,EAAX,KACF,KAAK,UAAAN,EAAQE,iBAAR,eAAmBC,MAAMR,QAAS,EACrC,OAAUW,EAAV,IACF,QACE,OAAUA,EAAV,SAIN,OACE,kBAAC,IAAD,CACE7B,MAAO,kBAACoB,EAAD,CAAMY,KAAMT,EAAQU,KAAMV,EAAQQ,MACzC9B,YAAW,UAAYsB,EAAQW,WAAWC,WAA/B,wBACLZ,EAAQa,MAAMD,YAEpB,2BAAIZ,EAAQtB,aACZ,8BAAOuB,KAiCPa,EAAc,aA4CLC,UAxEM,WAAM,QACnBC,EAAQC,yBAAeH,GAEvBI,EAAQF,SAAH,UAAGA,EAAOG,OAAOC,YAAjB,iBAAG,EAAoBC,mBAAvB,aAAG,EAAiClB,MAEzCmB,EAAgBJ,aAAH,EAAGA,EAAOd,KAAI,gBAAGG,EAAH,EAAGA,KAAH,OAC/B,kBAACR,EAAD,CAAcC,QAASO,EAAMlB,IAAKkB,EAAKC,UAGzC,OACE,iCACE,kBAAC,IAAD,CAAK/B,MAAM,aACX,kBAAC,IAAD,CAASA,MAAM,YACZ6C,EACD,kBAACzB,EAAD,CACEY,KAAK,gCACLlB,OAAO,SACPgC,IAAI,sBACJC,aAAW,SACXC,MAAO,CAAEC,UAAW,GAAIC,WAAY,SALtC","file":"component---src-pages-projects-tsx-881b79d4099455237524.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n  margin: 15px 0;\n`\nconst Title = styled.p`\n  font-size: 26px;\n  margin: 0 0 5px 0;\n`\n\nconst Description = styled.p`\n  font-size: 14px;\n  color: var(--primary);\n  margin: 0 0 15px 0;\n`\n\nconst Item = ({ title, description, children }) => (\n  <Wrapper>\n    <Title>{title}</Title>\n    <Description>{description}</Description>\n    {children}\n  </Wrapper>\n)\n\nItem.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.node.isRequired,\n  description: PropTypes.node.isRequired,\n}\n\nexport default React.memo(Item)\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 3px;\n  background-color: var(--dark);\n  margin: 10px 0;\n  animation: reveal 0.7s forwards;\n  @keyframes reveal {\n    from {\n      clip-path: inset(0 0 0 100%);\n    }\n    to {\n      clip-path: inset(0 0 0 0);\n    }\n  }\n`\n\nexport default Divider\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nimport Divider from \"./divider\"\n\nconst SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: var(--dark);\n\n  animation: fadein 0.5s;\n\n  @keyframes fadein {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`\n\nconst Title = styled.span`\n  font-family: \"Archivo Black\", sans-serif;\n  font-weight: 400;\n  font-size: 16px;\n  margin-bottom: 10px;\n`\n\nconst Section = ({ children, title, ...props }) => (\n  <SectionWrapper {...props}>\n    <Divider />\n    <Title>{title}</Title>\n    {children}\n  </SectionWrapper>\n)\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired,\n}\n\nexport default React.memo(Section)\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport Section from \"../components/section\"\nimport SEO from \"../components/seo\"\nimport Item from \"../components/item\"\n\nconst Link = styled.a`\n  color: inherit;\n`\n\nconst ProjectsItem = ({ project }) => {\n  const formattedLanguages = project.languages?.edges?.map((edges, index) => {\n    const language = edges?.node.name\n    if (project.languages?.edges.length === 1) return `(${language})`\n    switch (index) {\n      case 0:\n        return `(${language}, `\n      case project.languages?.edges.length - 1:\n        return `${language})`\n      default:\n        return `${language}, `\n    }\n  })\n\n  return (\n    <Item\n      title={<Link href={project.url}>{project.name}</Link>}\n      description={`stars: ${project.stargazers.totalCount} | forks:\n          ${project.forks.totalCount}`}\n    >\n      <p>{project.description}</p>\n      <span>{formattedLanguages}</span>\n    </Item>\n  )\n}\n\nconst ProjectsPage = () => {\n  const query = useStaticQuery(githubQuery)\n\n  const repos = query?.github.user?.pinnedItems?.edges\n\n  const ProjectsItems = repos?.map(({ node }) => (\n    <ProjectsItem project={node} key={node.name} />\n  ))\n\n  return (\n    <article>\n      <SEO title=\"Projects\" />\n      <Section title=\"Projects\">\n        {ProjectsItems}\n        <Link\n          href=\"https://github.com/eleboucher\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label=\"Github\"\n          style={{ marginTop: 30, fontWeight: \"bold\" }}\n        >\n          More on Github\n        </Link>\n      </Section>\n    </article>\n  )\n}\n\nconst githubQuery = graphql`\n  {\n    github {\n      user(login: \"eleboucher\") {\n        pinnedItems(first: 10) {\n          edges {\n            node {\n              ... on GitHub_Repository {\n                name\n                description\n                url\n                languages(first: 6) {\n                  edges {\n                    node {\n                      name\n                    }\n                  }\n                  totalCount\n                }\n                repositoryTopics(first: 3) {\n                  edges {\n                    node {\n                      topic {\n                        name\n                      }\n                      url\n                    }\n                  }\n                }\n                stargazers {\n                  totalCount\n                }\n                forks {\n                  totalCount\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectsPage\n"],"sourceRoot":""}