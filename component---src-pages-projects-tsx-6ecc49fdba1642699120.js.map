{"version":3,"sources":["webpack:///./src/components/item.tsx","webpack:///./src/components/divider.tsx","webpack:///./src/components/section.tsx","webpack:///./src/pages/projects.tsx"],"names":["Wrapper","styled","div","Title","p","Description","React","memo","title","description","children","Divider","SectionWrapper","span","props","Link","a","ProjectsItem","project","formattedLanguages","languages","edges","map","index","language","node","name","length","href","url","stargazers","totalCount","forks","ProjectsPage","query","repos","github","user","pinnedItems","ProjectsItems","key","target","rel","aria-label","style","marginTop","fontWeight"],"mappings":"42GAAA,qCAIMA,EAAUC,IAAOC,IAAV,gEAAGD,CAAH,oBAGPE,EAAQF,IAAOG,EAAV,8DAAGH,CAAH,sCAKLI,EAAcJ,IAAOG,EAAV,oEAAGH,CAAH,4DAoBFK,QAAMC,MAdR,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,SAAvB,OACX,kBAACV,EAAD,KACE,kBAACG,EAAD,KAAQK,GACR,kBAACH,EAAD,KAAcI,GACbC,O,+GCZUC,EAPCV,IAAOC,IAAV,uEAAGD,CAAH,uECGb,IAAMW,EAAiBX,IAAOC,IAAV,4EAAGD,CAAH,kIAiBdE,EAAQF,IAAOY,KAAV,mEAAGZ,CAAH,+FAoBIK,QAAMC,MAbL,SAAC,GAAD,IAAGG,EAAH,EAAGA,SAAUF,EAAb,EAAaA,MAAUM,E,oIAAvB,gCACd,kBAACF,EAAmBE,EAClB,kBAAC,EAAD,MACA,kBAACX,EAAD,KAAQK,GACPE,O,wICzBCK,EAAOd,IAAOe,EAAV,iEAAGf,CAAH,oBAIJgB,EAAe,SAAC,GAAgB,QAAdC,EAAc,EAAdA,QAChBC,EAAkB,UAAGD,EAAQE,iBAAX,iBAAG,EAAmBC,aAAtB,aAAG,EAA0BC,KAAI,SAACD,EAAOE,GAAU,QACnEC,EAAWH,aAAH,EAAGA,EAAOI,KAAKC,KAC7B,GAAwC,KAApC,UAAAR,EAAQE,iBAAR,eAAmBC,MAAMM,QAAc,MAAO,IAAIH,EAAX,IAC3C,OAAQD,GACN,KAAK,EACH,UAAWC,EAAX,KACF,KAAK,UAAAN,EAAQE,iBAAR,eAAmBC,MAAMM,QAAS,EACrC,OAAUH,EAAV,IACF,QACE,OAAUA,EAAV,SAIN,OACE,kBAAC,IAAD,CACEhB,MAAO,kBAACO,EAAD,CAAMa,KAAMV,EAAQW,KAAMX,EAAQQ,MACzCjB,YAAW,UAAYS,EAAQY,WAAWC,WAA/B,wBACLb,EAAQc,MAAMD,YAEpB,2BAAIb,EAAQT,aACZ,8BAAOU,KA6EEc,UAxEM,WAAM,QACnBC,EAAQ,OAERC,EAAQD,SAAH,UAAGA,EAAOE,OAAOC,YAAjB,iBAAG,EAAoBC,mBAAvB,aAAG,EAAiCjB,MAEzCkB,EAAgBJ,aAAH,EAAGA,EAAOb,KAAI,gBAAGG,EAAH,EAAGA,KAAH,OAC/B,kBAACR,EAAD,CAAcC,QAASO,EAAMe,IAAKf,EAAKC,UAGzC,OACE,iCACE,kBAAC,IAAD,CAAKlB,MAAM,aACX,kBAAC,IAAD,CAASA,MAAM,YACZ+B,EACD,kBAACxB,EAAD,CACEa,KAAK,8BACLa,OAAO,SACPC,IAAI,sBACJC,aAAW,SACXC,MAAO,CAAEC,UAAW,GAAIC,WAAY,SALtC","file":"component---src-pages-projects-tsx-6ecc49fdba1642699120.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nconst Wrapper = styled.div`\n  margin: 15px 0;\n`\nconst Title = styled.p`\n  font-size: 26px;\n  margin: 0 0 5px 0;\n`\n\nconst Description = styled.p`\n  font-size: 14px;\n  color: var(--primary);\n  margin: 0 0 15px 0;\n`\n\nconst Item = ({ title, description, children }) => (\n  <Wrapper>\n    <Title>{title}</Title>\n    <Description>{description}</Description>\n    {children}\n  </Wrapper>\n)\n\nItem.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.node.isRequired,\n  description: PropTypes.node.isRequired,\n}\n\nexport default React.memo(Item)\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Divider = styled.div`\n  width: 100%;\n  height: 3px;\n  background-color: var(--dark);\n  margin: 10px 0;\n`\n\nexport default Divider\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport styled from \"styled-components\"\n\nimport Divider from \"./divider\"\n\nconst SectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: var(--dark);\n\n  animation: fadein 0.5s;\n\n  @keyframes fadein {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`\n\nconst Title = styled.span`\n  font-family: \"Archivo Black\", sans-serif;\n  font-weight: 400;\n  font-size: 16px;\n  margin-bottom: 10px;\n`\n\nconst Section = ({ children, title, ...props }) => (\n  <SectionWrapper {...props}>\n    <Divider />\n    <Title>{title}</Title>\n    {children}\n  </SectionWrapper>\n)\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string.isRequired,\n}\n\nexport default React.memo(Section)\n","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"../components/layout\"\nimport Section from \"../components/section\"\nimport SEO from \"../components/seo\"\nimport Item from \"../components/item\"\n\nconst Link = styled.a`\n  color: inherit;\n`\n\nconst ProjectsItem = ({ project }) => {\n  const formattedLanguages = project.languages?.edges?.map((edges, index) => {\n    const language = edges?.node.name\n    if (project.languages?.edges.length === 1) return `(${language})`\n    switch (index) {\n      case 0:\n        return `(${language}, `\n      case project.languages?.edges.length - 1:\n        return `${language})`\n      default:\n        return `${language}, `\n    }\n  })\n\n  return (\n    <Item\n      title={<Link href={project.url}>{project.name}</Link>}\n      description={`stars: ${project.stargazers.totalCount} | forks:\n          ${project.forks.totalCount}`}\n    >\n      <p>{project.description}</p>\n      <span>{formattedLanguages}</span>\n    </Item>\n  )\n}\n\nconst ProjectsPage = () => {\n  const query = useStaticQuery(githubQuery)\n\n  const repos = query?.github.user?.pinnedItems?.edges\n\n  const ProjectsItems = repos?.map(({ node }) => (\n    <ProjectsItem project={node} key={node.name} />\n  ))\n\n  return (\n    <article>\n      <SEO title=\"Projects\" />\n      <Section title=\"Projects\">\n        {ProjectsItems}\n        <Link\n          href=\"https://github.com/genesixx\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          aria-label=\"Github\"\n          style={{ marginTop: 30, fontWeight: \"bold\" }}\n        >\n          More on Github\n        </Link>\n      </Section>\n    </article>\n  )\n}\n\nconst githubQuery = graphql`\n  {\n    github {\n      user(login: \"genesixx\") {\n        pinnedItems(first: 10) {\n          edges {\n            node {\n              ... on GitHub_Repository {\n                name\n                description\n                url\n                languages(first: 6) {\n                  edges {\n                    node {\n                      name\n                    }\n                  }\n                  totalCount\n                }\n                repositoryTopics(first: 3) {\n                  edges {\n                    node {\n                      topic {\n                        name\n                      }\n                      url\n                    }\n                  }\n                }\n                stargazers {\n                  totalCount\n                }\n                forks {\n                  totalCount\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectsPage\n"],"sourceRoot":""}